name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:


  typechecks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@master
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      
      - name: Install pyright
        run: npm install -g pyright

      - name: Load cache
        uses: actions/cache@v2
        id: cached-dependecies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}

      - name: Validate pyproject.toml
        run: poetry check

      - name: Install dependencies
        if: steps.cached-dependecies.outputs.cache-hit != 'true'
        run: poetry install

      - name: Flake8
        run: |
          poetry run flake8 app --count --show-source --statistics
      
      - name: Run type checking
        run: pyright --lib --verifytypes website --ignoreexternal